name: Publish hasworn

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    name: Build app docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Publish production CSS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pip install "Cython<3.0" "pyyaml<6" --no-build-isolation
          pip install libsass==0.23.0 awscli==1.37.5
          ./update_css

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          tags: hasworn:latest

      - name: Inspect the build image
        run: docker image inspect hasworn:latest

      - name: Create environ.commit
        run: echo COMMIT_SHA=${GITHUB_SHA::8} > environ.commit

      - name: Bring up the stack
        run: docker-compose -f docker-compose.yml -f docker-compose-dev.yml up -d

      - name: Run tests
        run: ./test

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    if: github.ref == 'refs/heads/main'
    name: Run remote deploy script
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v0.1.4
        with:
          host: i.hasworn.com
          username: hasworn
          key: ${{ secrets.SSH_KEY }}
          script: ./deploy.sh
